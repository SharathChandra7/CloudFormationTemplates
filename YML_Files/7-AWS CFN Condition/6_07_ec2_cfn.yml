AWSTemplateFormatVersion: 2010-09-09
#Here we adding condition, when we select Prod as environment, it should assign Elastic IP.
Parameters:
  
  EnvironementName:
    Description: Select the Environment
    Type: String
    Default: dev
    AllowedValues:
      -  dev
      -  prod
      -  qa
Mappings:
  MyRegionMap:
    us-east-2:
      HVM64: ami-0d542ef84ec55d71c 
    us-west-1:
      HVM64: ami-04bc3da8f14823e88
  MyEnvironmentType:
    dev:
      instanceType: t2.micro
    prod:
      instanceType: t2.small
    qa:
      instanceType: t2.medium    
Conditions: #Here if we select the input other than Prod, then Dev security group should be assinged and If we select Prod then Prod security group should be assinged
  CreateEIPForProd: !Equals [!Ref EnvironementName, prod]
  CreateProdSecurityGroup: !Equals [!Ref EnvironementName,prod]
  CreateDevSecurityGroup: !Not [{Condition: CreateProdSecurityGroup}] #If it not equal to prod security group then assign Dev security group.
  IfRegionUseKeyName: !And [!Or [!Equals [!Ref 'AWS::Region',us-east-2], !Equals [!Ref 'AWS::Region',us-west-1]],!Equals [!Ref EnvironementName,dev]]
Resources:
  MyVMInstanceInstance:
    Type: 'AWS::EC2::Instance'    
    Properties:
      ImageId: !FindInMap
        -  MyRegionMap #Here it will bring the region
        -  !Ref 'AWS::Region' #PseduoParameters,Top level key, here it will bring the region we are in 
        -  HVM64 # Second Level key, Based on region, this parameter will return the AMI ID      
      InstanceType: !FindInMap
        - MyEnvironmentType
        - !Ref EnvironementName #Here we need to parameterize because, as we have two values dev and prod and user should be able to select any 1 value
        - instanceType
      KeyName: !If [IfRegionUseKeyName,cfn-key-1,cfn-key-2]
      SecurityGroups : !If [CreateDevSecurityGroup,[!Ref DevEnvSecurityGroup],[!Ref ProdEnvSecurityGroup]]
  MyProdEIP:
    Type: 'AWS::EC2::EIP'
    Condition: CreateEIPForProd #If this is true, then an Elatic IP is assigned to our Instance
    Properties:
      InstanceId: !Ref MyVMInstanceInstance
  DevEnvSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateDevSecurityGroup
    Properties:
      GroupDescription: DevSG
      SecurityGroupIngress:
        -  IpProtocol: tcp
           FromPort: '22'
           ToPort: '22'
           CidrIp: 0.0.0.0/0
  ProdEnvSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateProdSecurityGroup
    Properties:
      GroupDescription: ProdSG
      SecurityGroupIngress:
        -  IpProtocol: tcp
           FromPort: '22'
           ToPort: '22'
           CidrIp: 0.0.0.0/0
      
      